classType SystemLib.Delay.TurnOffDelay
blockdiagramSpecification Main {
	methodBody compute {
		outPin active {
			connection_14, connection_1, connection_7
		}
	}
	methodBody value {
		outPin {
			connection_2
		}
	}
	ifElse at (231, 31) {
		inPin connection_4 {
			bendpoints (160, 0)
		}
		ifControlFlowOutPin {
			connection_23
		}
		elseControlFlowOutPin {
			connection_24
		}
		sequenceCall at (-30, -14) {
			inPin connection_1
		}
	}
	methodArgumentIdentifier compute.signal at (21, 35) {
		label at (0, -1)
		outPin {
			connection_4
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	methodArgumentIdentifier compute.delayTime at  (311, 55) {
		label at (-10, -1)
		outPin {
			connection_6
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	simpleIdentifier time at  (461, 55) {
		label at (10, -1)
		inPin connection_6 outPin sequenceCall at (10, -14) {
			inPin connection_23 {
				bendpoints 
			(190, 0)
			}
		}
	}
	simpleIdentifier compute.memloc at  (21, 135) {
		label at (0, -1)
		inPin outPin {
			connection_17
		}
		sequenceCall at  (0, -14) {
			inPin
		}
	}
	greater at  (141, 136) size (2, 5) {
		inPin connection_17 inPin connection_16 outPin {
			connection_22
		}
	}
	if at  (311, 151) {
		inPin connection_22 ifControlFlowOutPin {
			connection_25
		}
		sequenceCall at  (0, -30) {
			inPin connection_24 {
				bendpoints 
			(0, 60)
			}
		}
	}
	simpleIdentifier time at  (401, 185) {
		label at (10, -1)
		inPin connection_21 {
			bendpoints (50, 0), (50, 60), 
		(-210, 60), (-210, -20)
		}
		outPin {
			connection_18
		}
		sequenceCall at (10, -14) {
			inPin connection_25 {
				bendpoints 
			(50, 0)
			}
		}
	}
	subtraction at  (531, 186) size (2, 5) {
		inPin connection_18 inPin connection_19 outPin {
			connection_21
		}
	}
	literal Numeric "0.0" at  (31, 173) size (49, 0) {
		outPin {
			connection_16
		}
	}
	simpleIdentifier SystemLib.Miscellaneous.DeltaTimeService.deltaT at  (401, 225) {
		label at (10, -1)
		inPin outPin {
			connection_19
		}
		sequenceCall at (-30, -24) {
			inPin
		}
	}
	simpleIdentifier time at   (31, 335) {
		label at (10, -1)
		inPin outPin {
			connection_15
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	simpleIdentifier compute.memloc at  (251, 335) {
		label at (0, -1)
		inPin connection_15 outPin sequenceCall at (-10, -14) {
			inPin connection_14
		}
	}
	methodArgumentIdentifier compute.signal at   (31, 395) {
		label at (0, -1)
		outPin {
			connection_9
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	or at  (271, 396) {
		inPin connection_9 inPin connection_13 {
			bendpoints 
		(40, 0)
		}
		outPin {
			connection_8
		}
	}
	simpleIdentifier buffer at  (361, 405) {
		label at (0, -1)
		inPin connection_8 outPin {
			connection_10
		}
		sequenceCall at (-10, -14) {
			inPin connection_7
		}
	}
	return at  (491, 405) {
		label at (0, 0)
		inPin connection_10 sequenceCall at (0, -14) {
			inPin connection_2
		}
	}
	simpleIdentifier compute.memloc at   (21, 455) {
		label at (0, -1)
		inPin outPin {
			connection_12
		}
		sequenceCall at (-10, -14) {
			inPin
		}
	}
	greater at  (191, 456) size (2, 5) {
		inPin connection_12 inPin connection_11 outPin {
			connection_13
		}
	}
	literal Numeric "0.0" at   (31, 493) size (49, 0) {
		outPin {
			connection_11
		}
	}
}